<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jason Xu</title>
    <description>In the end, we only regret the chances we didn&apos;t take.</description>
    <link>http://C0ldstudy.github.io/</link>
    <atom:link href="http://C0ldstudy.github.io/feed.xml" rel="self" type="application/rss+xml"/>
<<<<<<< HEAD
    <pubDate>Sun, 16 Jan 2022 22:11:58 -0800</pubDate>
    <lastBuildDate>Sun, 16 Jan 2022 22:11:58 -0800</lastBuildDate>
=======
    <pubDate>Fri, 17 Dec 2021 10:32:58 -0800</pubDate>
    <lastBuildDate>Fri, 17 Dec 2021 10:32:58 -0800</lastBuildDate>
>>>>>>> 304097f880b41b0906b3aa69ada6cf666ef08204
    <generator>Jekyll v4.2.1</generator>
    
      <item>
        <title>Graph Databases and Visualization</title>
        <description>&lt;p&gt;Recently, I tried several graph databases and visualization tools on large-scale graphs such as Neo4j, Graph-Tool etc..&lt;/p&gt;

&lt;p&gt;In the blog, I will introduce some basic knowledge of them. At the same time, I record some issues and the corresponding solutions.&lt;/p&gt;

&lt;h1 id=&quot;neo4j&quot;&gt;Neo4j&lt;/h1&gt;

&lt;h2 id=&quot;1-install-neo4j-on-ubuntu&quot;&gt;1. Install Neo4j on Ubuntu&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-neo4j-on-ubuntu-20-04&quot;&gt;Installation Tutorial&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databases&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databses&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-usage&quot;&gt;2. Usage&lt;/h2&gt;

&lt;p&gt;Since I am using the community version, there are some actions such as creating a new database that are not able to take easily.&lt;/p&gt;

&lt;h4 id=&quot;21-how-to-createdelete-a-new-database&quot;&gt;2.1 How to create/delete a new database:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Create: &lt;a href=&quot;https://stackoverflow.com/a/62564995/6546143&quot;&gt;link&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Delete: &lt;a href=&quot;https://stackoverflow.com/a/68773829/6546143&quot;&gt;link&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Neo4j Server Config file: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/neo4j/neo4j.conf&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Neo4j database path: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/lib/neo4j/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Step 1: Stop the server&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Step 2:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/lib/neo4j/
&lt;span class=&quot;c&quot;&gt;# Step 3:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# rm -rf data/databases/lanl/* data/transactions/lanl/*&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; data/databases/&amp;lt;database name&amp;gt; data/transactions/&amp;lt;database name&amp;gt;
&lt;span class=&quot;c&quot;&gt;# Step 4: Restart the server&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;22-how-to-count-the-nodes-and-edges-number-in-the-whole-database&quot;&gt;2.2 How to count the nodes and edges number in the whole database&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Solution: &lt;a href=&quot;https://neo4j.com/developer/kb/fast-counts-using-the-count-store/&quot;&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;23-install-apoc-for-neo4j&quot;&gt;2.3 Install APOC for Neo4j&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/56227465/6546143&quot;&gt;Tutorial&lt;/a&gt;, APOC downloading &lt;a href=&quot;https://neo4j.com/labs/apoc/4.1/installation/&quot;&gt;link&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;24-merge-repulicated-nodes&quot;&gt;2.4 Merge repulicated nodes&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;refactor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mergeNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YIELD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;25-insert-the-nodes-or-edges-if-not-existing&quot;&gt;2.5 Insert the nodes or edges if not existing&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;MERGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1146&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MERGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2464&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MERGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;26-show-all-the-nodes-and-edges-in-one-graph&quot;&gt;2.6 Show all the nodes and edges in one graph&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;27-display-more-nodes-and-edges&quot;&gt;2.7 Display more nodes and edges&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:config initialNodeDisplay: 1000&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;issues&quot;&gt;Issues:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;When we try to login on Neo4j client, we receive the issue &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ServiceUnavailable: WebSocket connection failure. Due to security constraints in your web browser, the reason for the failure is not available to this Neo4j Driver. Please use your browsers development console to determine the root cause of the failure. Common reasons include the database being unavailable, using the wrong connection URL or temporary network problems. If you have enabled encryption, ensure your browser is configured to trust the certificate Neo4j is configured to use. WebSocket readyState is: 3&lt;/code&gt;:
    &lt;ol&gt;
      &lt;li&gt;The solution is to connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:7687/&lt;/code&gt;. And then we can login on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:7474/browser/&lt;/code&gt; smoothly.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Trouble shooting &lt;a href=&quot;https://community.neo4j.com/t/troubleshooting-connection-issues-to-neo4j/129&quot;&gt;link&lt;/a&gt;.
3.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;graph-tool&quot;&gt;Graph-Tool&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://graph-tool.skewed.de/&quot;&gt;Graph-tool&lt;/a&gt; is a python package that can analyses the graphs and visualize large-scale graphs.&lt;/p&gt;

&lt;p&gt;It runs faster than Networkx because the core data structure and algorithms are implement in C++ instead of pure python.&lt;/p&gt;

&lt;p&gt;There are some quick tutorials and examples in the &lt;a href=&quot;https://graph-tool.skewed.de/static/doc/quickstart.html&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Nov 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/11/Graph_Databases_and_Visualization/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/11/Graph_Databases_and_Visualization/</guid>
        
        <category>System</category>
        
        
      </item>
    
      <item>
        <title>Reinstall Ubuntu on a dual-system machine</title>
        <description>&lt;p&gt;Recently, I need to reinstall the Ubuntu on Dell XPS 6 series. Here is the recording.&lt;/p&gt;

&lt;p&gt;I follow the &lt;a href=&quot;https://itsfoss.com/reinstall-ubuntu/&quot;&gt;tutorial&lt;/a&gt; to install the ubuntu without deleting other data. By the method, the data that are not in the same partition with the OS will be left in the disk.&lt;/p&gt;

&lt;p&gt;The basic steps are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a live USB&lt;/li&gt;
  &lt;li&gt;Reinstall Ubuntu by choosing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;something else&lt;/code&gt; for installation type. &lt;a href=&quot;https://youtu.be/ptF2RUehbKs&quot;&gt;link&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Find the partition for OS.&lt;/li&gt;
      &lt;li&gt;Remove the partition and install the new ubuntu system on it.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;some-issues&quot;&gt;Some Issues:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;I met with these problems mostly because the machine I deal with has dual systems: ubuntu and windows. So after I reinstall ubuntu, I will stuck in the GRUB command line view.
    &lt;ul&gt;
      &lt;li&gt;How to use grub to run ubuntu: &lt;a href=&quot;https://askubuntu.com/a/1175786/856750&quot;&gt;link&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Solution: Change boot from UEFL to Legacy&lt;/li&gt;
      &lt;li&gt;How to change Grub Graphic UI waiting time: &lt;a href=&quot;https://askubuntu.com/a/9009/856750&quot;&gt;link&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Auto mount the external disk on startup: &lt;a href=&quot;https://askubuntu.com/a/165462/856750&quot;&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 28 Sep 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/09/Reinstall_Ubuntu/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/09/Reinstall_Ubuntu/</guid>
        
        <category>PhD</category>
        
        
      </item>
    
      <item>
        <title>CCS2021</title>
        <description>&lt;p&gt;Recently, the accepted papers from CCS2021’ is published &lt;a href=&quot;https://www.sigsac.org/ccs/CCS2021/accepted-papers.html&quot;&gt;here&lt;/a&gt;. I will summarize the related papers in the blog on machine learning. The details from website are &lt;a href=&quot;https://www.sigsac.org/ccs/CCS2021/conference-program.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;three-lectures&quot;&gt;Three Lectures:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Pseudo-Randomness and the Crystal Ball/Cynthia Dwork, Harvard University&lt;/li&gt;
  &lt;li&gt;Towards Building a Responsible Data Economy/Dawn Song, University of California, Berkeley&lt;/li&gt;
  &lt;li&gt;Are we done yet? Our journey to fight against memory-safety bugs/Taesoo Kim, Georgia Institute of Technology &amp;amp; Samsung Research&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;machine-learning-and-security-1-attacks-on-robustness&quot;&gt;Machine Learning and Security 1: Attacks on Robustness&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Black-box Adversarial Attacks on Commercial Speech Platforms with Minimal Information&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A Hard Label Black-box Adversarial Attack Against Graph Neural Networks&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Robust Adversarial Attacks Against DNN-Based Wireless Communication Systems&lt;/li&gt;
  &lt;li&gt;AI-Lancet: Locating Error-inducing Neurons to Optimize Neural Networks&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;machine-learning-and-security-2-defenses-for-ml-robustness&quot;&gt;Machine Learning and Security 2: Defenses for ML Robustness&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Learning Security Classifiers with Verified Global Robustness Properties&lt;/li&gt;
  &lt;li&gt;On the Robustness of Domain Constraints&lt;/li&gt;
  &lt;li&gt;Cert-RNN: Towards Certifying the Robustness of Recurrent Neural Networks&lt;/li&gt;
  &lt;li&gt;TSS: Transformation-Specific Smoothing for Robustness Certification&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;privacy-and-anonymity-1-inference-attacks&quot;&gt;Privacy and Anonymity 1: Inference Attacks&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Honest-but-Curious Nets: Sensitive Attributes of Private Inputs Can Be Secretly Coded into the Classifiers’ Outputs&lt;/li&gt;
  &lt;li&gt;Quantifying and Mitigating Privacy Risks of Contrastive Learning&lt;/li&gt;
  &lt;li&gt;Membership Inference Attacks Against Recommender Systems&lt;/li&gt;
  &lt;li&gt;Membership Leakage in Label-Only Exposures&lt;/li&gt;
  &lt;li&gt;When Machine Unlearning Jeopardizes Privacy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-a-hard-label-black-box-adversarial-attack-against-graph-neural-networks&quot;&gt;1. A Hard Label Black-box Adversarial Attack Against Graph Neural Networks&lt;/h2&gt;

&lt;p&gt;Author:&lt;/p&gt;

&lt;h4 id=&quot;main-idea&quot;&gt;Main Idea&lt;/h4&gt;

&lt;h4 id=&quot;key-insight&quot;&gt;Key insight&lt;/h4&gt;

&lt;h4 id=&quot;experiments&quot;&gt;Experiments&lt;/h4&gt;

</description>
        <pubDate>Fri, 10 Sep 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/09/CCS2021/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/09/CCS2021/</guid>
        
        <category>Conferences</category>
        
        
      </item>
    
      <item>
        <title>Tricks Summary 2021</title>
        <description>&lt;p&gt;In the blog, I will summary some tricks I learned and hope it will be helpful for others.&lt;/p&gt;

&lt;h2 id=&quot;tensorflow&quot;&gt;Tensorflow&lt;/h2&gt;

&lt;h4 id=&quot;1-removes-the-warnings-on-tensorflow-v1&quot;&gt;1. Removes the warnings on Tensorflow v1&lt;/h4&gt;

&lt;p&gt;I find two solutions while the first one remove all the warnings from the &lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/27023&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Method 1
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_verbosity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Method 2
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow.python.util&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deprecation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;deprecation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_PRINT_DEPRECATION_WARNINGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-set-a-reproducible-environment-for-tensorflow-numpy-and-random-packages&quot;&gt;2. Set a reproducible environment for tensorflow, numpy and random packages&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/66343730/6546143&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SEED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_seeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SEED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;PYTHONHASHSEED&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# tf.random.set_seed(seed)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_random_seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# tf.random.set_seed()
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_global_determinism&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SEED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_seeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;TF_DETERMINISTIC_OPS&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;1&apos;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;TF_CUDNN_DETERMINISTIC&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;1&apos;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_inter_op_parallelism_threads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-edit-static-graph-in-tensorflow-1&quot;&gt;3. Edit static graph in Tensorflow 1&lt;/h4&gt;

&lt;p&gt;When we have a file to store the pretrained model and we want to attack it directly, we can use graph_editor to change the output or input of the pretrained model. The doc is &lt;a href=&quot;https://haosdent.gitbooks.io/tensorflow-document/content/api_docs/python/contrib.graph_editor.html&quot;&gt;here&lt;/a&gt;. And the following code is an example.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contrib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph_editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sgv0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sgv1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disconnect_first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Connect the outputs of sgv0 to the inputs of sgv1.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_default_graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_tensor_by_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input:0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;face_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;160&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ndots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;im&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;face_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;expanded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dotted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expanded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ge.connect(ge.sgv(dotted.op), ge.sgv(inputs.op), disconnect_first=True)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sgv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dotted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sgv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disconnect_first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-exporting-the-model-to-onnx-format&quot;&gt;4. Exporting the model to ONNX format&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.barracuda@1.0/manual/Exporting.html&quot;&gt;tutorial&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-remove-warnings-each-time-running-the-code&quot;&gt;5. Remove Warnings each time running the code&lt;/h4&gt;

&lt;p&gt;Sometimes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero&lt;/code&gt; will show up which is pretty annoying.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for a in /sys/bus/pci/devices/*; do echo 0 | sudo tee -a $a/numa_node; done&lt;/code&gt; can be used to remove them.&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;

&lt;h4 id=&quot;1-uninstall-pip-accidentally&quot;&gt;1. uninstall pip accidentally&lt;/h4&gt;

&lt;p&gt;As a normal user, the python commands will be stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/$USER/.local/bin/&lt;/code&gt;. But this time I remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; under the path. So I need to reinstall it by the following commands from the &lt;a href=&quot;https://unix.stackexchange.com/a/446531/318400&quot;&gt;link&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Checkt the installed version&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.local/bin/pip3 &lt;span class=&quot;nt&quot;&gt;-V&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;/h2&gt;

&lt;h4 id=&quot;1-install-docker-on-ubuntu-1604&quot;&gt;1. install docker on ubuntu 16.04&lt;/h4&gt;

&lt;p&gt;This &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-16-04&quot;&gt;tutorial&lt;/a&gt; also point out how to add a normal user to docker group so that he avoids to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; when using docker.&lt;/p&gt;

&lt;h4 id=&quot;2-how-to-debug-and-check-log-when-running-docker-compose-up--d&quot;&gt;2. How to Debug and check log when running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose up -d&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# check the end of the log file&lt;/span&gt;
docker logs &amp;lt;app name&amp;gt; &lt;span class=&quot;nt&quot;&gt;-ft&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# shut down the containers&lt;/span&gt;
docker-compose down
&lt;span class=&quot;c&quot;&gt;# start the containers&lt;/span&gt;
docker-compose up &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the path is not writable, we need to change the volumes path in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;others&quot;&gt;Others&lt;/h2&gt;

&lt;h4 id=&quot;1-mac-bluetooth-is-not-available&quot;&gt;1. Mac Bluetooth is not available&lt;/h4&gt;

&lt;p&gt;Solutions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reset the SMC: &lt;a href=&quot;https://support.apple.com/en-us/HT201295&quot;&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-how-to-use-wget-to-imitate-the-website-download&quot;&gt;2. How to use wget to imitate the website download?&lt;/h4&gt;

&lt;p&gt;Solutions: use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chrome-&amp;gt;View-&amp;gt;Developer-&amp;gt;Developer tools-&amp;gt;Network Tab-&amp;gt;Headers tab-&amp;gt;Copy as cURL&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://unix.stackexchange.com/a/453579/318400&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-onenote-is-stuck-on-loading-page&quot;&gt;3. OneNote is stuck on loading page&lt;/h4&gt;

&lt;p&gt;Potential solutions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;right click the notebook-&amp;gt;check sync error-&amp;gt;sync&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;4-support-two-branches-in-the-same-machine&quot;&gt;4. Support two branches in the same machine&lt;/h4&gt;

&lt;p&gt;Used: &lt;a href=&quot;https://www.integralist.co.uk/posts/multiple-branches-in-git/&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git worktree add ../foo_hotfix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;5-vs-code-sftp-cannot-save-the-files&quot;&gt;5. VS Code SFTP cannot save the files&lt;/h4&gt;

&lt;p&gt;Used: &lt;a href=&quot;https://stackoverflow.com/a/67524099&quot;&gt;Solution&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;6-change-hostname-on-mac&quot;&gt;6. Change hostname on Mac&lt;/h4&gt;

&lt;p&gt;Used: &lt;a href=&quot;https://apple.stackexchange.com/a/287775&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;7-imgcat-on-iterm2-cannot-work-on-a-remote-server&quot;&gt;7. Imgcat on iTerm2 cannot work on a remote server&lt;/h4&gt;

&lt;p&gt;Install the python package: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install --user imgcat&lt;/code&gt; from the &lt;a href=&quot;https://superuser.com/a/1391017/1016048&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;8-jupyter-runs-on-the-default-python-environment-instead-of-the-conda-virtual-environment&quot;&gt;8. Jupyter runs on the default python environment instead of the conda virtual environment&lt;/h4&gt;

&lt;p&gt;You can check by the commands:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the virtual environment pathes are not listed here, it means the environment is the machine default environment.&lt;/p&gt;

&lt;p&gt;Useful &lt;a href=&quot;https://github.com/jupyter/notebook/issues/2563#issuecomment-330472953&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3 -m ipykernel install --user&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;9-add-a-repository-to-the-current-repository-with-the-whole-project&quot;&gt;9. Add a repository to the current repository with the whole project&lt;/h4&gt;

&lt;p&gt;We need to remove the cache of the sub repository: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rm -f --cached &amp;lt;path to the submodule&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;10-how-to-upload-overleaf-project-to-arxiv&quot;&gt;10. How to upload overleaf project to Arxiv?&lt;/h4&gt;

&lt;ul&gt;
<<<<<<< HEAD
  &lt;li&gt;Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\pdfoutput=1&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.tex&lt;/code&gt; file. Set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bib&lt;/code&gt; file name as the same as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.bib&lt;/code&gt;. Move all the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.tex&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.bib&lt;/code&gt; and related files on the root folder.&lt;/li&gt;
=======
  &lt;li&gt;
    &lt;p&gt;Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\pdfoutput=1&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.tex&lt;/code&gt; file. Set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bib&lt;/code&gt; file name as the same as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.bib&lt;/code&gt;. Move all the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.tex&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.bib&lt;/code&gt; and related files on the root folder.&lt;/p&gt;
  &lt;/li&gt;
>>>>>>> 304097f880b41b0906b3aa69ada6cf666ef08204
  &lt;li&gt;Use the submit button and choose the arxiv on the overleaf.&lt;/li&gt;
  &lt;li&gt;Remove all the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.DS_Store&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

<<<<<<< HEAD
&lt;h4 id=&quot;11--what-should-i-do-if-the-model-has-different-outputs-each-time&quot;&gt;11.  What should I do if the model has different outputs each time?&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Check the random seed for tensorflow. torch, numpy.&lt;/li&gt;
  &lt;li&gt;Check the model dropout, norm layer.&lt;/li&gt;
  &lt;li&gt;Checkout the random seed on layers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some useful links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keras model training result is not the same as testing result: &lt;a href=&quot;https://github.com/keras-team/keras/issues/6977&quot;&gt;link&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;12-manager-jupyter-kernel&quot;&gt;12. Manager Jupyter Kernel&lt;/h4&gt;

&lt;p&gt;Basically, each time we use jupyter to run a jupyter server, we need to figure out which kernel is using.&lt;/p&gt;

&lt;p&gt;This is a related blog: &lt;a href=&quot;https://queirozf.com/entries/jupyter-kernels-how-to-add-change-remove&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are some commands that help us manager the jupyter kernels:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# list the kernels&lt;/span&gt;
jupyter kernelspec list
&lt;span class=&quot;c&quot;&gt;# add a kernel&lt;/span&gt;
ipython kernel &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;local-venv&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# remove a kernel&lt;/span&gt;
ipython kernelspec remove &amp;lt;kernel name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

=======
>>>>>>> 304097f880b41b0906b3aa69ada6cf666ef08204
</description>
        <pubDate>Thu, 02 Sep 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/09/Tricks_Summary_2021/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/09/Tricks_Summary_2021/</guid>
        
        <category>PhD</category>
        
        
      </item>
    
      <item>
        <title>USENIX Security 21 ML Paper Summary</title>
        <description>&lt;p&gt;The blog summarizes the machine learning related papers on the USENIX Security 21’ at first. Then I would like to choose several papers to introduce their main ideas. All the videos, slides are published &lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/technical-sessions&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;machine-learning-backdoor-and-poisoning&quot;&gt;Machine Learning: Backdoor and Poisoning&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/severi&quot;&gt;Explanation-Guided Backdoor Poisoning Attacks Against Malware Classifiers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/bagdasaryan&quot;&gt;Blind Backdoors in Deep Learning Models&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/xi&quot;&gt;Graph Backdoor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/tang-di&quot;&gt;Demon in the Variant: Statistical Analysis of DNNs for Robust Backdoor Contamination Detection&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/schuster&quot;&gt;You Autocomplete Me: Poisoning Vulnerabilities in Neural Code Completion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/carlini-poisoning&quot;&gt;Poisoning the Unlabeled Dataset of Semi-Supervised Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/vicarte&quot;&gt;Double-Cross Attacks: Subverting Active Learning Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;adversarial-machine-learning-defenses&quot;&gt;Adversarial Machine Learning: Defenses&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/xiang&quot;&gt;PatchGuard: A Provably Robust Defense against Adversarial Patches via Small Receptive Fields and Masking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/azizi&quot;&gt;T-Miner: A Generative Approach to Defend Against Trojan Attacks on DNN-based Text Classification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/hussain&quot;&gt;WaveGuard: Understanding and Mitigating Audio Adversarial Examples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/chen-yizheng&quot;&gt;Cost-Aware Robust Tree Ensembles for Security Applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/eisenhofer&quot;&gt;Dompteur: Taming Audio Adversarial Examples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/yang-limin&quot;&gt;CADE: Detecting and Explaining Concept Drift Samples for Security Applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/han-xueyuan&quot;&gt;SIGL: Securing Software Installations Through Deep Graph Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;machine-learning-privacy-issues&quot;&gt;Machine Learning: Privacy Issues&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/song&quot;&gt;Systematic Evaluation of Privacy Risks of Machine Learning Models&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/carlini-extracting&quot;&gt;Extracting Training Data from Large Language Models&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/koti&quot;&gt;SWIFT: Super-fast and Robust Privacy-Preserving Machine Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/he-xinlei&quot;&gt;Stealing Links from Graph Neural Networks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/zhang-wanrong&quot;&gt;Leakage of Dataset Properties in Multi-Party Machine Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/nasr&quot;&gt;Defeating DNN-Based Traffic Analysis Systems in Real-Time With Blind Adversarial Perturbations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/zheng&quot;&gt;Cerebro: A Platform for Multi-Party Cryptographic Collaborative Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-graph-backdoor&quot;&gt;1. &lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity21/presentation/xi&quot;&gt;Graph Backdoor&lt;/a&gt;&lt;/h2&gt;

</description>
        <pubDate>Mon, 16 Aug 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/08/USENIX_Security_21_ML_Summary/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/08/USENIX_Security_21_ML_Summary/</guid>
        
        <category>Machine Learning</category>
        
        
      </item>
    
      <item>
        <title>Elasticsearch Related</title>
        <description>&lt;h1 id=&quot;installation&quot;&gt;INSTALLATION&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/start&quot;&gt;Elastic tutorial&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-install-elasticsearch-on-ubuntu&quot;&gt;How to install Elasticsearch on Ubuntu?&lt;/h2&gt;

&lt;p&gt;From the &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/targz.html#targz-enable-indices&quot;&gt;official website&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;the default port of elasticsearch is 9200.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-linux-x86_64.tar.gz
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-linux-x86_64.tar.gz.sha512
shasum &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; 512 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; elasticsearch-7.14.0-linux-x86_64.tar.gz.sha512 
&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xzf&lt;/span&gt; elasticsearch-7.14.0-linux-x86_64.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;elasticsearch-7.14.0

&lt;span class=&quot;c&quot;&gt;# run as a daemon&lt;/span&gt;
./bin/elasticsearch &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; pid
&lt;span class=&quot;c&quot;&gt;# shut down Elasticsearch&lt;/span&gt;
pkill &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; pid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-to-install-kibana-on-linux&quot;&gt;How to install Kibana on Linux?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/targz.html&quot;&gt;Official tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The default port of Kibana is 5601.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; https://artifacts.elastic.co/downloads/kibana/kibana-7.14.0-linux-x86_64.tar.gz
curl https://artifacts.elastic.co/downloads/kibana/kibana-7.14.0-linux-x86_64.tar.gz.sha512 | shasum &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; 512 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; - 
&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xzf&lt;/span&gt; kibana-7.14.0-linux-x86_64.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;kibana-7.14.0-linux-x86_64/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-to-install-logstash&quot;&gt;How to install Logstash?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/logstash/7.14/installing-logstash.html#_apt&quot;&gt;Official tutorial&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;-qO&lt;/span&gt; - https://artifacts.elastic.co/GPG-KEY-elasticsearch | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add -
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;apt-transport-https
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb https://artifacts.elastic.co/packages/7.x/apt stable main&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; /etc/apt/sources.list.d/elastic-7.x.list
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;logstash

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.elastic.co/guide/en/logstash/7.14/running-logstash.html&quot;&gt;tutorial&lt;/a&gt; to run Logstash.&lt;/p&gt;

&lt;h1 id=&quot;issues-recordings&quot;&gt;ISSUES Recordings&lt;/h1&gt;

&lt;h2 id=&quot;elasticsearch&quot;&gt;Elasticsearch&lt;/h2&gt;

&lt;h4 id=&quot;1-error-max-virtual-memory-areas-vmmax_map_count-65530-is-too-low-increase-to-at-least-262144&quot;&gt;1. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/59267523/6546143&quot;&gt;Solution&lt;/a&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sysctl -w vm.max_map_count=262144&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;2-error-the-default-discovery-settings-are-unsuitable-for-production-use-at-least-one-of-discoveryseed_hosts-discoveryseed_providers-clusterinitial_master_nodes-must-be-configured&quot;&gt;2. Error: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Solution: add the `      discovery.type: single-node&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; to the &lt;/code&gt;docker-compose.yml`.&lt;/p&gt;

&lt;h4 id=&quot;3-a-misleading-thing-which-costs-me-much-time&quot;&gt;3. A misleading thing which costs me much time&lt;/h4&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt;, we can set the volumes. Actually, the former one is the path of our local machine and the later one is the path in the docker container. In the following example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./elasticsearch/config/elasticsearch.yml&lt;/code&gt; is the path in our local machine and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/share/elasticsearch/config/elasticsearch.yml&lt;/code&gt; is the docker’s absolute path and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ro&lt;/code&gt; means read-only.&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./elasticsearch/data:/usr/share/elasticsearch/data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 04 Jul 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/07/Elasticsearch_related/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/07/Elasticsearch_related/</guid>
        
        <category>Machine Learning</category>
        
        
      </item>
    
      <item>
        <title>天池大赛赛题分析 机器学习篇</title>
        <description>&lt;p&gt;在这篇博客中，我打算整理《阿里云天池大赛赛题解析——机器学习篇》的相关理论，以及书中介绍的数据分析相关的小技巧。这本书涵盖了4道题：工业蒸汽量预测、天猫用户重复购买预测、O2O优惠券预测以及阿里云安全恶意程序检测。接下来我将逐一分析。&lt;/p&gt;

&lt;h2 id=&quot;1-工业蒸汽量预测&quot;&gt;1. 工业蒸汽量预测&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：这道题试图通过锅炉传感器采集的数据来预测产生的蒸汽量。&lt;/p&gt;

&lt;h3 id=&quot;11-数据探索&quot;&gt;1.1 数据探索&lt;/h3&gt;

&lt;h4 id=&quot;111-变量分析&quot;&gt;1.1.1 变量分析&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;单变量分析：&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;双变量分析：&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;连续性与连续性
        &lt;ul&gt;
          &lt;li&gt;散点图&lt;/li&gt;
          &lt;li&gt;计算相关性：相关性系数&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;类别型与类别型
        &lt;ul&gt;
          &lt;li&gt;双向表&lt;/li&gt;
          &lt;li&gt;卡方检验&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;类别型与连续型
        &lt;ul&gt;
          &lt;li&gt;小提琴图：violin plot&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;112-缺失值的处理&quot;&gt;1.1.2 缺失值的处理&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;删除&lt;/li&gt;
  &lt;li&gt;平均值、众数、中值&lt;/li&gt;
  &lt;li&gt;预测模型填充&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;113-异常值的处理&quot;&gt;1.1.3 异常值的处理&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;检测：箱线图、四分位数差（interquartile range, IQR）&lt;/li&gt;
  &lt;li&gt;处理：删除、转换、填充、区别对待&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;114-变量转换&quot;&gt;1.1.4 变量转换&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;对数变换：用于向右倾斜的分布，不能用于含零或负数的变量。&lt;/li&gt;
  &lt;li&gt;取平方根或立方根&lt;/li&gt;
  &lt;li&gt;变量分组&lt;/li&gt;
  &lt;li&gt;生成新变量
    &lt;ul&gt;
      &lt;li&gt;派生变量：从一个变量中的信息生成一个新的变量&lt;/li&gt;
      &lt;li&gt;哑变量：one-hot encoding&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;115-可视化数据分布&quot;&gt;1.1.5 可视化数据分布&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;岭回归模型&lt;/li&gt;
  &lt;li&gt;直方图和Q-Q图：数据的分位数和正态分布的分位数对比参照图&lt;/li&gt;
  &lt;li&gt;Kernel Density Estimation核密度估计&lt;/li&gt;
  &lt;li&gt;计算各个特征相关性系数-&amp;gt;相关性热力图：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sns.heatmap()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Box-cox变换&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;12-特征工程&quot;&gt;1.2 特征工程&lt;/h3&gt;

&lt;h4 id=&quot;121-特征处理&quot;&gt;1.2.1 特征处理：&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;标准化： \(x&apos;=\frac{x-X.mean()}{S}\)​&lt;/li&gt;
  &lt;li&gt;区间缩放法：\(x&apos;=\frac{x-Min}{Max-Min}\)&lt;/li&gt;
  &lt;li&gt;归一化&lt;/li&gt;
  &lt;li&gt;定量特征二值化&lt;/li&gt;
  &lt;li&gt;定性特征哑编码&lt;/li&gt;
  &lt;li&gt;数据转换
    &lt;ul&gt;
      &lt;li&gt;多项式转换&lt;/li&gt;
      &lt;li&gt;指数转换&lt;/li&gt;
      &lt;li&gt;对数转换&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;122-特征降维&quot;&gt;1.2.2 特征降维&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;过滤法：按照散发性或相关性设定阈值选择特征
    &lt;ul&gt;
      &lt;li&gt;方差选择法：Variance Threshold&lt;/li&gt;
      &lt;li&gt;SelectKBest: 相关系数法、卡方检验、最大信息系数法&lt;/li&gt;
      &lt;li&gt;递归消除特征法：RFE&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;包装法：根据目标函数选择若干特征&lt;/li&gt;
  &lt;li&gt;嵌入法：用算法或模型得到特征权值系数
    &lt;ul&gt;
      &lt;li&gt;基于模型的特征选择法：SelectFromModel
        &lt;ul&gt;
          &lt;li&gt;基于惩罚项的特征选择法&lt;/li&gt;
          &lt;li&gt;基于树模型的特征选择法&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;线性降维
    &lt;ul&gt;
      &lt;li&gt;主成分分析法&lt;/li&gt;
      &lt;li&gt;线性判别分析法：Linear Discriminant Analysis, LDA&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;13-模型训练&quot;&gt;1.3 模型训练&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;决策树回归模型&lt;/li&gt;
  &lt;li&gt;集成学习回归模型
    &lt;ul&gt;
      &lt;li&gt;随机森林回归模型&lt;/li&gt;
      &lt;li&gt;LightGBM回归模型&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;模型的泛化和正则化（Regularization）
    &lt;ul&gt;
      &lt;li&gt;泛化：模型在处理训练未遇到样本的表现&lt;/li&gt;
      &lt;li&gt;正则化：L1，L2，Lq 范数&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;岭回归和LASSO回归
    &lt;ul&gt;
      &lt;li&gt;岭回归：拟合曲线始终是曲线&lt;/li&gt;
      &lt;li&gt;LASSO回归：拟合曲线会倾向于直线&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;模型评估
    &lt;ul&gt;
      &lt;li&gt;平均绝对值误差&lt;/li&gt;
      &lt;li&gt;均方误差&lt;/li&gt;
      &lt;li&gt;均方根误差&lt;/li&gt;
      &lt;li&gt;R平方值&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;交差验证&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;14-模型融合&quot;&gt;1.4 模型融合&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Bagging方法和随机森林：从训练集中抽样得到每个基模型所需要的子训练集，再对预测结果进行综合。&lt;/li&gt;
  &lt;li&gt;Boosting方法
    &lt;ul&gt;
      &lt;li&gt;Adaboost算法&lt;/li&gt;
      &lt;li&gt;提升数&lt;/li&gt;
      &lt;li&gt;梯度提升树&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Voting
    &lt;ul&gt;
      &lt;li&gt;软投票：给予不同模型不同权重&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Averaging and Ranking&lt;/li&gt;
  &lt;li&gt;Blending&lt;/li&gt;
  &lt;li&gt;Stacking&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;回归模型：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;岭回归&lt;/li&gt;
  &lt;li&gt;Lasso回归&lt;/li&gt;
  &lt;li&gt;ElasticNet回归&lt;/li&gt;
  &lt;li&gt;SVR回归&lt;/li&gt;
  &lt;li&gt;K近邻&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;模型融合Boosting方法：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;GBDT模型&lt;/li&gt;
  &lt;li&gt;XGB(eXtreme Gradient Boosting)模型&lt;/li&gt;
  &lt;li&gt;随机森林模型&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2-天猫用户重复购买预测&quot;&gt;2. 天猫用户重复购买预测&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：这道题试图通过用户特征预测复购率。&lt;/p&gt;

&lt;p&gt;###2.1 数据探索&lt;/p&gt;

&lt;h4 id=&quot;211-不均匀样本&quot;&gt;2.1.1 不均匀样本&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;随机欠采样&lt;/li&gt;
  &lt;li&gt;随机过采样&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于聚类的过采样&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;合成少数类过采样技术(SMOTE, Synthetic Minority Oversampling Technique)&lt;/li&gt;
  &lt;li&gt;基于数据清洗的SMOTE&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;212-常见的数据分布&quot;&gt;2.1.2 常见的数据分布&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;伯努利分布&lt;/li&gt;
  &lt;li&gt;二项分布&lt;/li&gt;
  &lt;li&gt;泊松分布&lt;/li&gt;
  &lt;li&gt;正态分布指数分布&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;22-特征工程&quot;&gt;2.2 特征工程&lt;/h3&gt;

&lt;h4 id=&quot;221-文本表示模型&quot;&gt;2.2.1 文本表示模型&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;词袋模型&lt;/li&gt;
  &lt;li&gt;N-gram模型&lt;/li&gt;
  &lt;li&gt;主题模型&lt;/li&gt;
  &lt;li&gt;词嵌入&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;222-特征提取&quot;&gt;2.2.2 特征提取&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;利用Countvector和TF-IDF提取特征&lt;/li&gt;
  &lt;li&gt;Stacking特征工具包：使用lgb和xgb分类模型构造Stacking特征&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;23-模型训练&quot;&gt;2.3 模型训练&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;逻辑回归分类模型&lt;/li&gt;
  &lt;li&gt;K近邻分类模型&lt;/li&gt;
  &lt;li&gt;高斯贝叶斯分类模型&lt;/li&gt;
  &lt;li&gt;决策树分类模型&lt;/li&gt;
  &lt;li&gt;集成学习分类模型
    &lt;ul&gt;
      &lt;li&gt;Bagging&lt;/li&gt;
      &lt;li&gt;Boosting&lt;/li&gt;
      &lt;li&gt;Major Voting&lt;/li&gt;
      &lt;li&gt;随机森林&lt;/li&gt;
      &lt;li&gt;LightGBM&lt;/li&gt;
      &lt;li&gt;极端随机树（Extra-Tree）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;模型验证指标
    &lt;ul&gt;
      &lt;li&gt;准确度&lt;/li&gt;
      &lt;li&gt;查准率（Precision）和查全率（Recall）
        &lt;ul&gt;
          &lt;li&gt;对于验钞机来说：
            &lt;ul&gt;
              &lt;li&gt;
\[查准率=\frac{存起来的真钞}{存起来的真钞+存起来的假钞}\]
              &lt;/li&gt;
              &lt;li&gt;
\[查全率=\frac{存起来的真钞}{存起来的真钞+误拦住的真钞}\]
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;F1值：查准律和查全率的加权调和平均&lt;/li&gt;
      &lt;li&gt;ROC(Receiver Operating Characteristic)&lt;/li&gt;
      &lt;li&gt;AUC曲线（Area Under the Curve）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-o2o优惠券预测&quot;&gt;3. O2O优惠券预测&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：这道题试图通过2016年1月1号到6月30号的真实线上线下消费行为的数据预测2016年7月领取优惠券后15天内的使用情况。&lt;/p&gt;

&lt;p&gt;本书介绍这道题的技术基本与前两题一致，在模型选择中增加XGboost模型。&lt;/p&gt;

&lt;h2 id=&quot;4-阿里云安全恶意程序检测&quot;&gt;4. 阿里云安全恶意程序检测&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：这道题试图通过经过沙箱模拟运行后的API指令序列预测恶意文件类型，包括：感染型病毒、木马程序、挖矿程序、DDoS木马、勒索病毒等。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;pivot特征建构&lt;/li&gt;
  &lt;li&gt;内存优化技巧
    &lt;ul&gt;
      &lt;li&gt;float64-&amp;gt;float16&lt;/li&gt;
      &lt;li&gt;numpy替换pandas&lt;/li&gt;
      &lt;li&gt;开源工具包
        &lt;ul&gt;
          &lt;li&gt;Dask from Github:多核CPU并行处理&lt;/li&gt;
          &lt;li&gt;Numba&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 17 Jun 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/06/%E5%A4%A9%E6%B1%A0%E5%A4%A7%E8%B5%9B%E8%B5%9B%E9%A2%98%E5%88%86%E6%9E%90_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AF%87/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/06/%E5%A4%A9%E6%B1%A0%E5%A4%A7%E8%B5%9B%E8%B5%9B%E9%A2%98%E5%88%86%E6%9E%90_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AF%87/</guid>
        
        <category>Machine Learning</category>
        
        
      </item>
    
      <item>
        <title>NDSS and Oakland 2021 ML Paper Summary</title>
        <description>&lt;p&gt;In this blog, I list some ML-related papers on NDSS and Oakland 2021.  I remove some papers that maybe too far away from my research interests.&lt;/p&gt;

&lt;h1 id=&quot;ndss-2021&quot;&gt;NDSS 2021&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;5C Machine Learning&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/lets-stride-blindfolded-in-a-forest-sublinear-multi-client-decision-trees-evaluation/&quot;&gt;Let’s Stride Blindfolded in a Forest: Sublinear Multi-Client Decision Trees Evaluation&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/practical-blind-membership-inference-attack-via-differential-comparisons/&quot;&gt;Practical Blind Membership Inference Attack via Differential Comparisons&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/gala-greedy-computation-for-linear-algebra-in-privacy-preserved-neural-networks/&quot;&gt;GALA: Greedy ComputAtion for Linear Algebra in Privacy-Preserved Neural Networks&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/fare-enabling-fine-grained-attack-categorization-under-low-quality-labeled-data/&quot;&gt;FARE: Enabling Fine-grained Attack Categorization under Low-quality Labeled Data&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;6C Federated Learning and Poisoning attacks&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/poseidon-privacy-preserving-federated-neural-network-learning/&quot;&gt;POSEIDON: Privacy-Preserving Federated Neural Network Learning&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/fltrust-byzantine-robust-federated-learning-via-trust-bootstrapping/&quot;&gt;FLTrust: Byzantine-robust Federated Learning via Trust Bootstrapping&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/manipulating-the-byzantine-optimizing-model-poisoning-attacks-and-defenses-for-federated-learning/&quot;&gt;Manipulating the Byzantine: Optimizing Model Poisoning Attacks and Defenses for Federated Learning&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/data-poisoning-attacks-to-deep-learning-based-recommender-systems/&quot;&gt;Data Poisoning Attacks to Deep Learning Based Recommender Systems&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;7C Machine Learning Applications&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/cv-inspector-towards-automating-detection-of-adblock-circumvention/&quot;&gt;CV-Inspector: Towards Automating Detection of Adblock Circumvention&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/flowlens-enabling-efficient-flow-classification-for-ml-based-network-security-applications/&quot;&gt;FlowLens: Enabling Efficient Flow Classification for ML-based Network Security Applications&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/privacyflash-pro-automating-privacy-policy-generation-for-mobile-apps/&quot;&gt;PrivacyFlash Pro: Automating Privacy Policy Generation for Mobile Apps&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.ndss-symposium.org/ndss-paper/towards-understanding-and-detecting-cyberbullying-in-real-world-images/&quot;&gt;Towards Understanding and Detecting Cyberbullying in Real-world Images&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-practical-blind-membership-inference-attack-via-differential-comparisons&quot;&gt;1. Practical Blind Membership Inference Attack via Differential Comparisons&lt;/h2&gt;

&lt;p&gt;Author: Bo Hui, Yuchen Yang, Haolin Yuan,…,Neil Zhenqiang Gong, Yinzhi Cao(JHU, Duke)&lt;/p&gt;

&lt;h4 id=&quot;main-idea&quot;&gt;Main Idea&lt;/h4&gt;

&lt;p&gt;As to the membership inference attack, the original method is to use shadow model to imitate the target model’s behaviour and use a binary classifier to check the query data is the member or the nonmember. But when the shadow model is not similar to the target model, things become different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BlindMI&lt;/strong&gt;: By transforming, adding noise and roughly selecting, they build a nonmember dataset. So that the query data are similar to the nonmember dataset, they do not belong to the target dataset. Vice verse.&lt;/p&gt;

&lt;h4 id=&quot;key-insight&quot;&gt;Key Insight&lt;/h4&gt;

&lt;p&gt;If we cannot get the target dataset, we use the complement to check out the data point is in the complement or not.&lt;/p&gt;

&lt;h4 id=&quot;experiments&quot;&gt;Experiments&lt;/h4&gt;

&lt;p&gt;They use different kernel functions to check the performance.&lt;/p&gt;

&lt;h2 id=&quot;2-fare-enabling-fine-grained-attack-categorization-under-low-quality-labeled-data&quot;&gt;2. FARE: Enabling Fine-grained Attack Categorization under Low-quality Labeled Data&lt;/h2&gt;

&lt;p&gt;Author: Junjie Liang,..Gang Wang, Xinyu Xing(PSU, UIUC)&lt;/p&gt;

&lt;h4 id=&quot;main-idea-1&quot;&gt;Main Idea&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Use various unsupervised learning methods to cluster the entire dataset:
    &lt;ol&gt;
      &lt;li&gt;K-means&lt;/li&gt;
      &lt;li&gt;DBSCAN&lt;/li&gt;
      &lt;li&gt;DEC&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Contrastive Learning&lt;/strong&gt;: Use the fused labels to train an input transformation net&lt;/li&gt;
  &lt;li&gt;Final clustering: perform clustering at the latent space&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;key-insight-1&quot;&gt;Key insight&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Low-quality labels pose a crucial challenge to deploy supervised DNNs in security applications.&lt;/li&gt;
  &lt;li&gt;Contrastive learning with ensemble clustering enables fine-grained attack categorization.&lt;/li&gt;
  &lt;li&gt;FARE can serve as an effective tool for attack categorization in real-world security applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;experiments-1&quot;&gt;Experiments&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Datasets:
    &lt;ol&gt;
      &lt;li&gt;Android Malware&lt;/li&gt;
      &lt;li&gt;Network Intrusion(KDDCUP’99)&lt;/li&gt;
      &lt;li&gt;Real world Application: Fraudulent accounts identification&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Metric: AMI and Accuracy&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-fltrust-byzantine-robust-federated-learning-via-trust-bootstrapping&quot;&gt;3. FLTrust: Byzantine-robust Federated Learning via Trust Bootstrapping&lt;/h2&gt;

&lt;p&gt;Author: Xiaoyu Cao,…, Neil Gong(Duke University, the Ohio State University)&lt;/p&gt;

&lt;h4 id=&quot;main-idea-2&quot;&gt;Main Idea&lt;/h4&gt;

&lt;p&gt;The paper provides a bootstrapping trust mechanism for the server to assign trust scores for clients and a new aggregation rule to detect adversarial examples on Federated Learning.&lt;/p&gt;

&lt;h4 id=&quot;key-insight-2&quot;&gt;Key insight&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;They design a new Byzantine-robust federated learning method that is robust against poisoning attacks.&lt;/li&gt;
  &lt;li&gt;The server can enhance security of federated learning via collecting a small training dataset to bootstrap trust.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;experiments-2&quot;&gt;Experiments&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Mnist, 100 clients, 20 malicious&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-data-poisoning-attacks-to-deep-learning-based-recommender-systems&quot;&gt;4. Data Poisoning Attacks to Deep Learning Based Recommender Systems&lt;/h2&gt;

&lt;p&gt;Author: Hai Huang, …, Neil Gong, …, Mingwei Xu(Tsinghua University, Duke University, West Virginia University)&lt;/p&gt;

&lt;h4 id=&quot;main-idea-3&quot;&gt;Main Idea&lt;/h4&gt;

&lt;p&gt;Data Poisoning Attacks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Algorithm-agnostic&lt;/li&gt;
  &lt;li&gt;Algorithm-specific&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Attacker’s goal: promote a target item in the recommender systems.&lt;/p&gt;

&lt;p&gt;Overview of the Attack:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Approximate the hit ratio&lt;/li&gt;
  &lt;li&gt;construct the poison model&lt;/li&gt;
  &lt;li&gt;select filler items&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;key-insight-3&quot;&gt;Key insight&lt;/h4&gt;

&lt;p&gt;The adversarial attack on recommend systems will learn from the classic adv attack while adding some specific features. How to move the adv attack to other security applications will be attractive for the reviewers probably.&lt;/p&gt;

&lt;h4 id=&quot;experiments-3&quot;&gt;Experiments&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Datasets: MovieLens-100k, MovieLens-1M, Last.fm&lt;/li&gt;
  &lt;li&gt;Target RS: NeuMF&lt;/li&gt;
  &lt;li&gt;Baseline methods: Random attack, bandwagon attack, MF attack.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;oakland-2021&quot;&gt;Oakland 2021&lt;/h1&gt;

&lt;h2 id=&quot;1-detecting-ai-trojans-using-meta-neural-analysis&quot;&gt;1. Detecting AI Trojans Using Meta Neural Analysis&lt;/h2&gt;

&lt;p&gt;Author: Xiaojun Xu etc. (UIUC)&lt;/p&gt;

&lt;p&gt;Conference: &lt;strong&gt;S&amp;amp;P2020&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;main-idea-4&quot;&gt;Main Idea&lt;/h4&gt;

&lt;p&gt;Aiming to design a state-of-the-art trojan models detecting method, the paper trains a &lt;em&gt;meta-classifier&lt;/em&gt; whose data are models’ features generated by &lt;em&gt;jumbo learning&lt;/em&gt; and &lt;em&gt;query tuning&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Highlight&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Promoting jumbo learning and query tuning.&lt;/li&gt;
  &lt;li&gt;Outperforming other methods on image datasets, speech datasets.&lt;/li&gt;
  &lt;li&gt;Defensing the adaptive attack. (Make some modification on the original defense).&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;key-insight-4&quot;&gt;Key insight&lt;/h4&gt;

&lt;p&gt;To find the best data  to train the meta-classifier for trojan models detection, the paper creates jumbo learning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jumbo Learning&lt;/strong&gt;: They copy the target model structure as shadow models and use different parameters, the clean data-set as well as the trojaned data-set to train them. They also set a function to adjust triggers’ transparency, size and other settings of the trojan data-set to improve the trojaned models’ generality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Query-Tuning&lt;/strong&gt;: When training the meta-classifier, they use the query-tuning technique to find the best representative features of the whole models’ data-set for the meta-classifier. The optimization goal is:&lt;/p&gt;

\[\arg\max_{\theta, X}\sum^m_{i=1}\mathcal{L}(meta(R(X);\theta), b_i)\]

&lt;p&gt;where \(X=\{x_1, \cdots, x_k\}\) means the query and \(R(X)\) is the representative features of input \(X\), \(b_i\) is the corresponding label. \(meta\) represents the meta-classifier.&lt;/p&gt;

&lt;h4 id=&quot;experiments-4&quot;&gt;Experiments&lt;/h4&gt;

&lt;p&gt;Compared to Neural Cleanse, DeepInspect, Activation Clustering, Spectral, STRIP, SentiNet, &lt;strong&gt;Meta Neural Trojan Detection&lt;/strong&gt; performs best. They also design adaptive attack and countermeasure to prove the robustness of the method.&lt;/p&gt;

</description>
        <pubDate>Mon, 10 May 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/05/NDSS_Oakland_2021_ML_Summary/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/05/NDSS_Oakland_2021_ML_Summary/</guid>
        
        <category>Conferences</category>
        
        
      </item>
    
      <item>
        <title>CVPR Competition 6 Summary</title>
        <description>&lt;p&gt;Recently, we take part in a &lt;a href=&quot;https://tianchi.aliyun.com/competition/entrance/531847/introduction&quot;&gt;competition&lt;/a&gt; about the white-box adversarial attacks on ML defense Models which is organized by Tsinghua University and UIUC. Basically, the organizer provides 15 defense models based on the adversarial training in &lt;strong&gt;Stage One&lt;/strong&gt; and we need to design a general attack algorithm to achieve the highest success rate. In &lt;strong&gt;Stage Two&lt;/strong&gt;, several hidden models will also be added to evaluate the attack algorithm and count for the final score. We should implement the attack algorithm on &lt;a href=&quot;https://github.com/thu-ml/ares/tree/contest&quot;&gt;ARES&lt;/a&gt; which is a platform built by Tsinghua University. We need to attack 1000 images from Cifar10 and 1000 images from ImageNet.&lt;/p&gt;

&lt;p&gt;There are two constrains about the attack. Firstly, the perturbation budget is 8/255 for Cifar10 and 4/255 for ImageNet in \(L_\infty\) norm. Besides, the mean number of the gradient calculations for each image is constrained to 100 while the number of the inference is 200  and the runtime of the the whole process is less than 3 hours on Tesla V100 GPU.&lt;/p&gt;

&lt;p&gt;At the very begining, we focus on the C&amp;amp;W attack and try to simplify the optimization proceed to meet the second requirement.  The objective function is:&lt;/p&gt;

&lt;p&gt;minimize \(\vert \vert \frac{1}{2}(tanh(w)+1)-x\vert \vert^2_2+c\cdot f(\frac{1}{2}(tanh(w)+1))\)&lt;/p&gt;

&lt;p&gt;And we design an algorithm to search for \(c\). If the \(L_\infty\) distance is larger than the perturbation budget, \(c=c/10\). Or  \(c=2\cdot c\).&lt;/p&gt;

&lt;p&gt;However, the result is not good and the score is 41.76.&lt;/p&gt;

&lt;p&gt;After several tries, we find that PGD is a better basic algorithm to improve.&lt;/p&gt;

&lt;p&gt;We have combined several attack algorithms together originated from PGD.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ermongroup/ODS&quot;&gt;ODS&lt;/a&gt;: Output Diversified Sampling&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fra31/auto-attack&quot;&gt;Auto Attack&lt;/a&gt;: APGD-CE
    &lt;ul&gt;
      &lt;li&gt;Gradient step&lt;/li&gt;
      &lt;li&gt;Restarts from the best point&lt;/li&gt;
      &lt;li&gt;Exploration vs exploitation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Due to the time limit, we do not get a pretty high score. Our final score is 47.11 in the end and rank 38 in 1681 teams.&lt;/p&gt;

&lt;p&gt;From our experience, the optimized-based adversarial attack is hard to be imporved on the steps since it is greatly impacted by the original point. And we assume that most of the top rank algorithms are basically use different parameters and some tricks.&lt;/p&gt;

&lt;p&gt;We will publish our codes on the Github sooner&amp;gt;-&amp;lt;.&lt;/p&gt;

&lt;h4 id=&quot;other-methods&quot;&gt;Other methods&lt;/h4&gt;

&lt;p&gt;Some top methods have been listed on the &lt;a href=&quot;https://tianchi.aliyun.com/forum?spm=5176.21852664.0.0.17587aa1CuNNRR#raceId=531847&quot;&gt;forum&lt;/a&gt;. Basically, most of them use ODI and APGD which are the same as ours. But they use ensemble learning by using several loss function.&lt;/p&gt;

&lt;p&gt;So the ideal method is like that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use FGSM to attack the most vulnerable images.&lt;/li&gt;
  &lt;li&gt;Then, use ODI-PGD or APGD to solve the left images.&lt;/li&gt;
  &lt;li&gt;If it does not work, try different loss functions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some useful tricks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adaptive iteration number.&lt;/li&gt;
  &lt;li&gt;Decrease step length.&lt;/li&gt;
  &lt;li&gt;Use momentum to avoid local optimal position.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 01 Apr 2021 00:00:00 -0700</pubDate>
        <link>http://C0ldstudy.github.io/2021/04/CVPR_6_Competition_Summary/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/04/CVPR_6_Competition_Summary/</guid>
        
        <category>Machine Learning</category>
        
        
      </item>
    
      <item>
        <title>CCS2020 ML Papers Summary</title>
        <description>&lt;p&gt;Recently, CCS2020 has finished. In the blog, I would like to talk about the papers concentrating on Attacking and Defending ML Systems in the conference. I will summarize four papers in the following list:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1904.08554&quot;&gt;Gotta Catch’Em All: Using Honeypots to Catch Adversarial Attacks on Neural Networks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1911.01559&quot;&gt;A Tale of Evil Twins: Adversarial Inputs versus Poisoned Models&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/2009.09663&quot;&gt;DeepDyve: Dynamic Verification for Deep Neural Networks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/10.1145/3372297.3423362&quot;&gt;Composite Backdoor Attack for Deep Neural Network by Mixing Existing Benign Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gotta-catchem-all-using-honeypots-to-catch-adversarial-attacks-on-neural-networks&quot;&gt;Gotta Catch’Em All: Using Honeypots to Catch Adversarial Attacks on Neural Networks&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Main Idea&lt;/strong&gt;: The paper uses  &lt;strong&gt;honeypot&lt;/strong&gt; on DNN to trapdoor the adversarial attacks and lead them to generate adversarial examples that similar to the trapdoors. They evaluate their defense on PGD, CW, Elastic Net and BPDA.&lt;/p&gt;

&lt;h6 id=&quot;highlights&quot;&gt;Highlights:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;Originally using trapdoors to defense adversarial attack&lt;/li&gt;
  &lt;li&gt;Showing the robustness of the defense on BPDA and surrogate model attack.&lt;/li&gt;
  &lt;li&gt;Generating the minimal impact on normal classification performance.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;summary&quot;&gt;Summary:&lt;/h6&gt;

&lt;p&gt;We can separate the defense into the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Embedding the trapdoors: It generates the trapdoor training dataset by augmenting the original dataset.&lt;/li&gt;
  &lt;li&gt;Training the Trap-doored Model: The trap-doored model can classify the data with the trapdoor to the trapdoor label. And then it records the trapdoor signatures that the data with the trapdoor’s neuron activation vector.&lt;/li&gt;
  &lt;li&gt;Detecting Adversarial Attacks: Comparing the trapdoor signatures and the inputs’ neuron activation vector.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;experiments&quot;&gt;Experiments:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;Datasets: MNIST, CIFAR10, GTSRB, YouTube Face.&lt;/li&gt;
  &lt;li&gt;The defense is not working on adaptive attack from Dr. Nicholas Carlini.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;thinking&quot;&gt;Thinking:&lt;/h6&gt;

&lt;p&gt;The defense method looks like using the attack method to defense. Like since the model will suffer from the adversarial attack, we can attack ourselves at first and know the attack result in advance.&lt;/p&gt;

&lt;h3 id=&quot;composite-backdoor-attack-for-deep-neural-network-by-mixing-existing-benign-features&quot;&gt;Composite Backdoor Attack for Deep Neural Network by Mixing Existing Benign Features&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Main Idea&lt;/strong&gt;: The paper designs a new trojan attack &lt;strong&gt;Composite Backdoor Attack&lt;/strong&gt; which can elude scanners by triggers composed from benign features of multiple labels.&lt;/p&gt;

&lt;h6 id=&quot;highlights-1&quot;&gt;Highlights:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new attack, &lt;em&gt;composite attack&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Implement the composite attack on various tasks to verify the performance.&lt;/li&gt;
  &lt;li&gt;Design a possible defense.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;summary-1&quot;&gt;Summary:&lt;/h6&gt;

&lt;p&gt;The composite attack is different from the classic adversarial attack because the perturbation can be found apparently and is the main body of other images. The composite attack can be implemented in the following steps.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Mixer construction: The main bodies of the two images are combined to generate the new image with the target label.&lt;/li&gt;
  &lt;li&gt;Training Data Generation: Use the images in the same class to generate clean data.&lt;/li&gt;
  &lt;li&gt;Trojan Training from scratch or the pre-trained model.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;experiments-1&quot;&gt;Experiments:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;Object Recognition&lt;/li&gt;
  &lt;li&gt;Traffic Sign Recognition&lt;/li&gt;
  &lt;li&gt;Face Recognition&lt;/li&gt;
  &lt;li&gt;Topic Classification&lt;/li&gt;
  &lt;li&gt;Object Detection&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;thinking-1&quot;&gt;Thinking:&lt;/h6&gt;

&lt;p&gt;The composite attack is a new attack which just use benign features. They implement various experiments to evaluate the performance of the attack.&lt;/p&gt;

&lt;h3 id=&quot;deepdyve-dynamic-verification-for-deep-neural-networks&quot;&gt;DeepDyve: Dynamic Verification for Deep Neural Networks&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Main idea&lt;/strong&gt;: The paper develops a lightweight dynamic verification checker &lt;em&gt;DeepDyve&lt;/em&gt; to make sure the prediction is correct. The checker DNN just focuses on the labels that are hard to distinguish from the original DNN.&lt;/p&gt;

&lt;p&gt;The advantages include the small structure and fault-tolerant. The threat model is that the attacker succeeds if the model’s output is not the same as the one in an attack-free environment.&lt;/p&gt;

&lt;h6 id=&quot;highlights-2&quot;&gt;Highlights:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;The checker is lightweight, fault-tolerant and dynamic verification.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;summary-2&quot;&gt;Summary:&lt;/h6&gt;

&lt;p&gt;As to build the final checker, the initial checker is chose from lots of candidate checkers based on the overhead and fault coverage. And then the checker is manipulated to achieve better coverage/overhead trade-off.&lt;/p&gt;

&lt;p&gt;When using the checker, they will compare the results from the original DNN and the checker DNN. If the prediction is not the same, they will re-calculate the result and use the original DNN’s output.&lt;/p&gt;

&lt;p&gt;Experiments:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Datasets: CIFAR10, GTSRB, CIFAR100, Tiny-Imagenet&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thinking:&lt;/p&gt;

&lt;p&gt;I just roughly read the paper. There are some key questions like how to generate the checker DNN.&lt;/p&gt;

&lt;h3 id=&quot;a-tale-of-evil-twins-adversarial-inputs-versus-poisoned-models&quot;&gt;A Tale of Evil Twins: Adversarial Inputs versus Poisoned Models&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Main idea&lt;/strong&gt;: The paper checks two vectors of the adversarial attack that are the poisoned data and the poisoned model. After that the paper develops a new attack &lt;em&gt;IMC&lt;/em&gt; that balances the weights of the two parts.&lt;/p&gt;

&lt;h6 id=&quot;highlights-3&quot;&gt;Highlights:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;The paper checks the impact between the poisoned data and the poisoned model. For example, if I increase the perturbation on the poisoned data, the decreasing of changing the poisoned model.&lt;/li&gt;
  &lt;li&gt;The paper develops &lt;strong&gt;Input Model Combination Attack&lt;/strong&gt;(IMC) and TrojanNN attack.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;summary-3&quot;&gt;Summary:&lt;/h6&gt;

&lt;p&gt;The paper promotes three new desiderata:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Efficacy: attack success rate&lt;/li&gt;
  &lt;li&gt;Fidelity: maintaining the original accuracy&lt;/li&gt;
  &lt;li&gt;Specificity: the misclassified labels directs to the target labels.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Two effects:&lt;/p&gt;

&lt;p&gt;Leverage Effect: Small cost of fidelity will improve significantly specificity and vice versa.&lt;/p&gt;

&lt;p&gt;Amplification Effect: Adversarial input sand poisoned models amplify each other.&lt;/p&gt;

&lt;h6 id=&quot;experiments-2&quot;&gt;Experiments:&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;Datasets: CIFAR10, Mini-ImgeNet, ISIC, GTRSB&lt;/li&gt;
  &lt;li&gt;Models: ResNet18, ResNet18, ResNet101, ResNet18&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;thinking-2&quot;&gt;Thinking:&lt;/h6&gt;

&lt;p&gt;The paper introduces the story in a totally different way. It firstly builds a new attack objective, and promotes IMC attack and makes some observations on the attack objective. Then it improves the attack by promoting a new attack TrojanNN attack. Finally, it discusses the potential countermeasures.&lt;/p&gt;

</description>
        <pubDate>Sun, 21 Feb 2021 00:00:00 -0800</pubDate>
        <link>http://C0ldstudy.github.io/2021/02/CCS2020_ML_Security_Papers_Summary/</link>
        <guid isPermaLink="true">http://C0ldstudy.github.io/2021/02/CCS2020_ML_Security_Papers_Summary/</guid>
        
        <category>Conferences</category>
        
        
      </item>
    
  </channel>
</rss>
